[
  {
    "objectID": "02_tabstat.html#summary",
    "href": "02_tabstat.html#summary",
    "title": "3  Deskriptionen",
    "section": "3.1 summary",
    "text": "3.1 summary\nHier ein Bespielbefehl für die Berechnung des arith. Mittels, des Medians, der Varianz und des Varianzkoeffizienten mit tabstat:\n\nsummarize zpalter\n\n\n## . set linesize. qui use \"./data/BIBBBAuA_2018_short.dta\", clear\n## \n## . summarize zpalter\n## \n##     Variable |        Obs        Mean    Std. Dev.       Min        Max\n## -------------+---------------------------------------------------------\n##      zpalter |     19,836    47.19228    11.33762         15         87"
  },
  {
    "objectID": "02_tabstat.html#tabstat",
    "href": "02_tabstat.html#tabstat",
    "title": "3  Deskriptionen",
    "section": "3.2 tabstat",
    "text": "3.2 tabstat\nMit tabstat können wir eine ganze Reihe statistischer Kennzahlen für metrische/kontinuierliche Merkmale berechnen. Die Syntax hat dabei das folgende Format: tabstat varlist, s(*option*) c(stat|var)\nHier eine Übersicht der Kennzahlen:\n\n\n\n\n \n  \n    Option \n    Kennzahl \n  \n \n\n  \n    mean \n    arithm. Mittel \n  \n  \n    median \n    Median \n  \n  \n    count \n    Anzahl der Beobachtungen ohne Missings \n  \n  \n    n \n    entspricht count \n  \n  \n    sum \n    Summe der Ausprägungen \n  \n  \n    max \n    Maximum \n  \n  \n    min \n    Minimum \n  \n  \n    range \n    Spannweite = max - min \n  \n  \n    variance \n    Varianz \n  \n  \n    sd \n    Standardabweichung \n  \n  \n    cv \n    Variationskoefficient (sd/mean) \n  \n  \n    skewness \n    Schiefe \n  \n  \n    kurtosis \n    Wölbung \n  \n  \n    pX \n    X. Perzentil (5,10,25,50,75,90,95,99) \n  \n  \n    iqr \n    Interquartilsdistanz = p75 - p25 \n  \n  \n    q \n    Entspricht p25 p50 p75 \n  \n\n\n\n\n\nHier ein Bespielbefehl für die Berechnung des arith. Mittels, des Medians, der Varianz und des Varianzkoeffizienten mit tabstat:\n\ntabstat zpalter, s(mean median var cv) c(stat)\n\n\n## . set linesize. qui use \"./data/BIBBBAuA_2018_short.dta\", clear\n## \n## . tabstat zpalter, s(mean sd min max n) c(stat)\n## \n##     variable |      mean        sd       min       max         N\n## -------------+--------------------------------------------------\n##      zpalter |  47.19228  11.33762        15        87     19836\n## ----------------------------------------------------------------\n\nFür Deskriptionsbefehle müssen wir immer zuerst ein estpost voranstellen:\n\nestpost tabstat F518_SUF, c(stat) stat(mean sd min max n)\nesttab, cells(\"mean sd min max count\")\n\n\n## . set linesize. qui use \"./data/BIBBBAuA_2018_short.dta\", clear\n## \n## . estpost tabstat F518_SUF, c(stat) stat(mean sd min max n)\n## \n## Summary statistics: mean sd min max count\n##      for variables: F518_SUF\n## \n##              |   e(mean)      e(sd)     e(min)     e(max)   e(count) \n## -------------+-------------------------------------------------------\n##     F518_SUF |  3532.109   3530.928          1      72000      16635 \n## \n## . esttab, cells(\"mean sd min max count\")\n## \n## -----------------------------------------------------------------------------\n##                       (1)                                                    \n##                                                                              \n##                      mean           sd          min          max        count\n## -----------------------------------------------------------------------------\n## F518_SUF         3532.109     3530.928            1        72000        16635\n## -----------------------------------------------------------------------------\n## N                   16635                                                    \n## -----------------------------------------------------------------------------\n\nWenn wir jetzt den Median hinzufügen möchten, brauchen wir ein neues estpost:\n\nesttab, cells(\"mean p50 sd min max count\")\n\n\n## . set linesize . qui use \"./data/BIBBBAuA_2018_short.dta\", clear\n## \n## . qui estpost tabstat F518_SUF, c(stat) stat(mean sd min max n)\n## \n## . esttab, cells(\"mean p50 sd min max count\")\n## \n## ------------------------------------------------------------------------------------------\n##                       (1)                                                                 \n##                                                                                           \n##                      mean          p50           sd          min          max        count\n## ------------------------------------------------------------------------------------------\n## F518_SUF         3532.109                  3530.928            1        72000        16635\n## ------------------------------------------------------------------------------------------\n## N                   16635                                                                 \n## ------------------------------------------------------------------------------------------\n\ntabstat mit p50 für Median:\n\nestpost tabstat F518_SUF, c(stat) stat(mean p50 sd min max n)\nesttab, cells(\"mean p50 sd min max count\")\n\n\n## . set linesize . qui use \"./data/BIBBBAuA_2018_short.dta\", clear\n## \n## . estpost tabstat F518_SUF, c(stat) stat(mean p50 sd min max n)\n## \n## Summary statistics: mean p50 sd min max count\n##      for variables: F518_SUF\n## \n##              |   e(mean)     e(p50)      e(sd)     e(min)     e(max)   e(count) \n## -------------+------------------------------------------------------------------\n##     F518_SUF |  3532.109       3000   3530.928          1      72000      16635 \n## \n## . esttab, cells(\"mean p50 sd min max count\")\n## \n## ------------------------------------------------------------------------------------------\n##                       (1)                                                                 \n##                                                                                           \n##                      mean          p50           sd          min          max        count\n## ------------------------------------------------------------------------------------------\n## F518_SUF         3532.109         3000     3530.928            1        72000        16635\n## ------------------------------------------------------------------------------------------\n## N                   16635                                                                 \n## ------------------------------------------------------------------------------------------\n\nSo oder so sieht diese Tabelle sieht natürlich noch überhaupt nicht so aus, wie wir sie haben möchten. Um das anzupassen, stehen uns eine ganze Reihe an Formatierungsbefehlen zur Verfügung.\n\nnonumber \\(\\Rightarrow\\) Zahl oben ausblenden\nnomtitle \\(\\Rightarrow\\) Modelltitel oben ausblenden (hier die Leerzeile)\nnoobs \\(\\Rightarrow\\) Beobachtungszahl unten ausblenden\nlabel \\(\\Rightarrow\\) Variablenlaben verwenden\n\n\nesttab, ///\n    cells(\"mean p50 sd min max count\") ///\n    nonumber nomtitle noobs label\n\n\n## . quiet. esttab, ///\n## >         cells(\"mean p50 sd min max count\") ///\n## >         nonumber nomtitle noobs label\n## \n## --------------------------------------------------------------------------------------------------\n##                              mean          p50           sd          min          max        count\n## --------------------------------------------------------------------------------------------------\n## Wie hoch ist Ih          3532.109         3000     3530.928            1        72000        16635\n## --------------------------------------------------------------------------------------------------\n\nDas label ist hier allerdings abgeschnitten, wäre aber die Frageformulierung. Stattdessen hätten wir gernen einen Variablennamen, dazu können wir mit coeflabel() den Variablennamen und in \"\" ein Label angeben. Außerdem wollen wir die Spalten ansprechender beschriften, dazu geben wir mit collabels ebenfalls in \"\" der Reihe nach Werte an:\n\nesttab, ///\n    cells(\"mean sd min max count\") ///\n    nonumber nomtitle nonote noobs label ///\n    collabels(\"Mean\" \"SD\" \"Median\" \"Min\" \"Max\" \"N\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\")\n\n\n## . quiet. esttab, ///\n## >         cells(\"mean p50 sd min max count\") ///\n## >                 nonumber nomtitle nonote noobs label ///\n## >         collabels(\"Mean\" \"SD\" \"Median\" \"Min\" \"Max\" \"N\") ///\n## >         coeflabel(F518_SUF \"Bruttoverdienst\")\n## \n## --------------------------------------------------------------------------------------------------\n##                              Mean           SD       Median          Min          Max            N\n## --------------------------------------------------------------------------------------------------\n## Bruttoverdienst          3532.109         3000     3530.928            1        72000        16635\n## --------------------------------------------------------------------------------------------------\n\nAbschließend möchten wir noch die Kennzahlen formatieren. Dazu können wir auf die Zahlenformate in Stata zurückgreifen - hier eine kurze Erklärung dazu.\n\nesttab, ///\n    cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%13.0fc)) max(fmt(%13.0fc)) count(fmt(%6.0fc))\")  ///\n    nonumber nomtitle nonote noobs label ///\n    collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\")\n\n\n## . quiet. esttab, ///\n## >         cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%13.0fc)) max(fmt(%13.0fc)) count(fmt(%6.0fc))\")  ///\n## >         nonumber nomtitle nonote noobs label ///\n## >         collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n## >         coeflabel(F518_SUF \"Bruttoverdienst\")\n## \n## -------------------------------------------------------------------------------------\n##                              Mean           SD          Min          Max            N\n## -------------------------------------------------------------------------------------\n## Bruttoverdienst          3,532.11     3,530.93            1       72,000       16,635\n## -------------------------------------------------------------------------------------\n\n\nÜbung 1"
  },
  {
    "objectID": "02_tabstat.html#export",
    "href": "02_tabstat.html#export",
    "title": "3  Deskriptionen",
    "section": "3.3 export",
    "text": "3.3 export\nBisher bewegen wir uns aber immer noch im Ausgabe-Fenster von Stata. Um die Tabelle nun zu exportieren, hängen wir ein using-Statement an esttab. Für das Ausgabeformat hängen wir einfach die gewünschte Dateiendung an:\n\n.rtf für eine Datei, die mit Word geöffnet und weiterverarbeitet werden kann\n.tex für eine Latex-Datei\n.csv für eine Excel-Datei (mehr zum Excel-Export hier)\n\n\nesttab using \"${res}/tab1.rtf\", ///\n    cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%4.0fc)) max(fmt(%4.0fc)) count(fmt(%4.0fc))\")  ///\n    nonumber nomtitle nonote noobs label ///\n    collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\") ///\n    replace\n   \nesttab using \"${res}/tab1.tex\", ///\n    cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min(fmt(%4.0fc)) max(fmt(%4.0fc)) count(fmt(%4.0fc))\")  ///\n    nonumber nomtitle nonote noobs label ///\n    collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\")  ///\n    replace booktabs"
  },
  {
    "objectID": "02_tabstat.html#zusätzliche-kennzahlen-hinzufügen",
    "href": "02_tabstat.html#zusätzliche-kennzahlen-hinzufügen",
    "title": "3  Deskriptionen",
    "section": "3.4 Zusätzliche Kennzahlen hinzufügen",
    "text": "3.4 Zusätzliche Kennzahlen hinzufügen\nGelegentlich möchten wir aber unserer Tabelle auch noch weitere Kennzahlen hinzufügen, bspw. aus mdesc oder fastgini.\n\nssc install mdesc\nssc install fastgini\n\nDazu können wir die estadd-Funktion nutzen. Um eine neue Spalte mit der gewünschten Kennzahl zu erhalten, müssen wir estadd matrix verwenden. Deswegen müssen wir ein klein bisschen in die matrix-Welt von Stata eintauchen, um die Werte richtig hinzufügen zu können.\n\nmdesc F518_SUF\nreturn list\nmat miss = r(miss)\nmat colname miss = F518_SUF\nmat list miss\n\n\n## . quiet. mdesc F518_SUF\n## \n##     Variable    |     Missing          Total     Percent Missing\n## ----------------+-----------------------------------------------\n##        F518_SUF |       3,377         20,012          16.87\n## ----------------+-----------------------------------------------\n## \n## . return list\n## \n## scalars:\n##             r(percent) =  16.87487507495502\n##               r(total) =  20012\n##                r(miss) =  3377\n## \n## macros:\n##           r(miss_vars) : \"F518_SUF\"\n## \n## . mat miss = r(miss)\n## \n## . mat colname miss = F518_SUF\n## \n## . mat list miss\n## \n## symmetric miss[1,1]\n##     F518_SUF\n## r1      3377\n\nDie so formatierte \\(1x1\\) matrix können wir jetzt in unsere Tabelle einfügen, indem wir estadd matrix miss angeben:\n\nestadd mat miss\n\n\n## . quiet. estadd mat miss\n## \n## added matrix:\n##                e(miss) :  1 x 1\n\nAnschließend können wir die Tabelle mit esttab erstellen und die Information aus mdesc unter dem Namen der hinzugefügten matrix aufrufen:\n\nesttab, cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc)) miss(fmt(%13.0fc))\") ///\n        noobs nomtitle nonumber label collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\" \"Missings\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\") \n\n\n## . quiet. esttab, cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc)) miss(fmt(%13.0fc))\") noobs ///\n## >                 nomtitle nonumber label collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\" \"Missings\") ///\n## >     coeflabel(F518_SUF \"Bruttoverdienst\") \n## \n## --------------------------------------------------------------------------------------------------\n##                              Mean           SD          Min          Max            N     Missings\n## --------------------------------------------------------------------------------------------------\n## Bruttoverdienst          3,532.11     3,530.93         1.00    72,000.00       16,635        3,377\n## --------------------------------------------------------------------------------------------------\n\n\nÜbung 2"
  },
  {
    "objectID": "02_tabstat.html#mehrere-variablen",
    "href": "02_tabstat.html#mehrere-variablen",
    "title": "3  Deskriptionen",
    "section": "3.5 mehrere Variablen",
    "text": "3.5 mehrere Variablen\nWir können natürlich auch mehrere Variablen in tabstat und damit in esttab aufnehmen:\n\nestpost tabstat zpalter F518_SUF, c(stat) stat(mean sd min max n)\nesttab, cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc))\") noobs ///\n        nomtitle nonumber label collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n        coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\") \n\n\n## . quiet.   esttab, cells(\"mean(fmt(%13.2fc)) sd(fmt(%13.2fc)) min max count(fmt(%13.0fc))\") noobs ///\n## >                 nomtitle nonumber label collabels(\"Mean\" \"SD\" \"Min\" \"Max\" \"N\") ///\n## >                 coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\") \n## \n## -------------------------------------------------------------------------------------\n##                              Mean           SD          Min          Max            N\n## -------------------------------------------------------------------------------------\n## Alter                       47.19        11.34        15.00        87.00       19,836\n## Bruttoverdienst          3,532.11     3,530.93         1.00    72,000.00       16,635\n## -------------------------------------------------------------------------------------\n\nEtwas tricky wird’s aber, wenn wir auch hier eigene Kennzahlen miteinfügen möchten. Die r()-Skalare für mdesc (und auch fastgini) geben uns nämlich nur den Wert für die letzte Variable aus:\n\nmdesc zpalter F518_SUF\nreturn list\n\n\n## . quiet. mdesc zpalter F518_SUF\n## \n##     Variable    |     Missing          Total     Percent Missing\n## ----------------+-----------------------------------------------\n##         zpalter |         176         20,012           0.88\n##        F518_SUF |       3,377         20,012          16.87\n## ----------------+-----------------------------------------------\n## \n## . return list\n## \n## scalars:\n##             r(percent) =  16.87487507495502\n##               r(total) =  20012\n##                r(miss) =  3377\n## \n## macros:\n##           r(miss_vars) : \"zpalter F518_SUF\"\n\nDaher müssen wir uns hier mit einer Schleife helfen:\n\n* matrix vorbereiten\n    glo x = \"zpalter F518_SUF\" // auszuwertende Variablen\n    glo len: word count ${x}    // wie viele sind es?\n    mat m1 = J(1,${len},.)     // entsprechend lange Matrix erstellen J(Zeilen,Spalten,Inhalt)\n    mat colname m1 = ${x}       // spalten schon mal richtig benennen\n    mat list m1                 // ansehen\n\n* Schleife über die angegebenen Variablen\n    forval y = 1/$len {\n        loc v: dis  word(\"${x}\",`y') // y.tes Wort aus x in v ablegen\n        display \"`v'\"               // zur Kontrolle: v anzeigen\n        mdesc `v'                   // missings in v berechnen\n        loc res_mat = r(miss)\n        mat m1[1,`y'] = `res_mat'\n    }\n    mat l m1\n\n\n## . quiet. * matrix vorbereiten\n## .         glo x = \"zpalter F518_SUF\" // auszuwertende Variablen\n## \n## .         glo len: word count ${x}        // wie viele sind es?\n## \n## .         mat m1 = J(1,${len},.)     // entsprechend lange Matrix erstellen J(Zeilen,Spalten,Inhalt)\n## \n## .         mat colname m1 = ${x}           // spalten schon mal richtig benennen\n## \n## .         mat list m1                                     // ansehen\n## \n## m1[1,2]\n##      zpalter  F518_SUF\n## r1         .         .\n## \n## . \n## . * Schleife über die angegebenen Variablen\n## .         forval y = 1/$len {\n##   2.                 loc v: dis      word(\"${x}\",`y') // y.tes Wort aus x in v ablegen\n##   3.                 display \"`v'\"                           // zur Kontrolle: v anzeigen\n##   4.                 mdesc `v'                                       // missings in v berechnen\n##   5.                 loc res_mat = r(miss)\n##   6.                 mat m1[1,`y'] = `res_mat'\n##   7.         }\n## zpalter\n## \n##     Variable    |     Missing          Total     Percent Missing\n## ----------------+-----------------------------------------------\n##         zpalter |         176         20,012           0.88\n## ----------------+-----------------------------------------------\n## F518_SUF\n## \n##     Variable    |     Missing          Total     Percent Missing\n## ----------------+-----------------------------------------------\n##        F518_SUF |       3,377         20,012          16.87\n## ----------------+-----------------------------------------------\n## \n## .         mat l m1\n## \n## m1[1,2]\n##      zpalter  F518_SUF\n## r1       176      3377\n\n…und dann können wir wieder zur gewohnten Routine zurück. estpost mit quietly unterdrückt den Output, den wir ja schon kennen.\n\nquietly estpost tabstat zpalter F518_SUF, c(stat) stat(mean sd min max n)\nestadd mat m1\nesttab, cells(\"count(fmt(%13.0fc)) m1(fmt(%13.0fc))\")  noobs ///\n        nomtitle nonumber label collabels(\"N\" \"Missings\") ///\n    coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")\n\n\n## . quiet. esttab, cells(\"count(fmt(%13.0fc)) m1(fmt(%13.0fc))\")  noobs ///\n## >                 nomtitle nonumber label collabels(\"N\" \"Missings\") ///\n## >         coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")\n## \n## ----------------------------------------------\n##                                 N     Missings\n## ----------------------------------------------\n## Alter                      19,836          176\n## Bruttoverdienst            16,635        3,377\n## ----------------------------------------------\n\n\nÜbung 3"
  },
  {
    "objectID": "02_tabstat.html#gruppenvergleich",
    "href": "02_tabstat.html#gruppenvergleich",
    "title": "3  Deskriptionen",
    "section": "3.6 Gruppenvergleich",
    "text": "3.6 Gruppenvergleich\nMit by(S1) bekommen wir einen Gruppenvergleich - hier zwischen Männern und Frauen. Die Option nototal unterdrückt dabei die total-Angabe\n\nestpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd)\nestpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd) nototal  \n\n\n## . quiet. estpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd)\n## \n## Summary statistics: mean sd\n##      for variables: zpalter F518_SUF\n##   by categories of: S1\n## \n##           S1 |   e(mean)      e(sd) \n## -------------+----------------------\n## männlich     |                      \n##      zpalter |  46.49079   11.87744 \n##     F518_SUF |  4232.735   3951.324 \n## -------------+----------------------\n## weiblich     |                      \n##      zpalter |  47.90402   10.71604 \n##     F518_SUF |  2800.926   2852.935 \n## -------------+----------------------\n## Total        |                      \n##      zpalter |  47.19228   11.33762 \n##     F518_SUF |  3532.109   3530.928 \n## \n## . estpost tabstat zpalter F518_SUF, by(S1) c(stat) stat(mean sd) nototal  \n## \n## Summary statistics: mean sd\n##      for variables: zpalter F518_SUF\n##   by categories of: S1\n## \n##           S1 |   e(mean)      e(sd) \n## -------------+----------------------\n## männlich     |                      \n##      zpalter |  46.49079   11.87744 \n##     F518_SUF |  4232.735   3951.324 \n## -------------+----------------------\n## weiblich     |                      \n##      zpalter |  47.90402   10.71604 \n##     F518_SUF |  2800.926   2852.935\n\nMit par bekommen wir den entsprechenden Wert in Klammern angezeigt:\n\nesttab, cells(mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)) nostar  nonumber unstack ///\n  nomtitle nonote noobs  ///\n   collabels(none)  ///\n   eqlabels(\"Männer\" \"Frauen\") /// \n   nomtitles ///\n   coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")\n\n\n## . quiet. esttab, cells(mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)) nostar  nonumber unstack ///\n## >   nomtitle nonote noobs  ///\n## >    collabels(none)  ///\n## >    eqlabels(\"Männer\" \"Frauen\") /// \n## >    nomtitles ///\n## >    coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")\n## \n## --------------------------------------\n##                    Männer       Frauen\n## --------------------------------------\n## Alter                46.5         47.9\n##                  (11.877)     (10.716)\n## Bruttoverd~t      4,232.7      2,800.9\n##               (3,951.324)  (2,852.935)\n## --------------------------------------\n\nUm die in cells() angegebenen Werte in eine Zeile zu bringen, müssen wir sie in \"\" setzen.\n\nesttab, cells(\"mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)\") nostar  nonumber unstack ///\n  nomtitle nonote noobs label  ///\n   collabels(none)  ///\n   eqlabels(\"Männer\" \"Frauen\") /// \n   nomtitles ///\n   coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")   \n\n\n## . quiet. esttab, cells(\"mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)\") nostar  nonumber unstack ///\n## >   nomtitle nonote noobs label  ///\n## >    collabels(none) gap   ///\n## >    eqlabels(\"Männer\" \"Frauen\") /// \n## >    nomtitles ///\n## >    coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")  \n## \n## ------------------------------------------------------------------------\n##                            Männer                    Frauen             \n## ------------------------------------------------------------------------\n## Alter                        46.5     (11.877)         47.9     (10.716)\n## \n## Bruttoverdienst           4,232.7  (3,951.324)      2,800.9  (2,852.935)\n## ------------------------------------------------------------------------\n\nMit collabels() können wir die Werte auch beschriften.\n\nesttab, cells(\"mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)\") nostar  nonumber unstack ///\n  nomtitle nonote noobs label  ///\n   collabels(\"Mean\" \"SD\" \"Mean\" \"SD\") ///\n   eqlabels(\"Männer\" \"Frauen\") /// \n   nomtitles ///\n   coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")   \n\n\n## . quiet. esttab, cells(\"mean(fmt(%10.1fc)) sd(fmt(%13.3fc) par)\") nostar  nonumber unstack ///\n## >   nomtitle nonote noobs label  ///\n## >    collabels(\"Mean\" \"SD\" \"Mean\" \"SD\") ///\n## >    eqlabels(\"Männer\" \"Frauen\") /// \n## >    nomtitles ///\n## >    coeflabel(F518_SUF \"Bruttoverdienst\" zpalter \"Alter\")   \n## \n## ------------------------------------------------------------------------\n##                            Männer                    Frauen             \n##                              Mean           SD         Mean           SD\n## ------------------------------------------------------------------------\n## Alter                        46.5     (11.877)         47.9     (10.716)\n## Bruttoverdienst           4,232.7  (3,951.324)      2,800.9  (2,852.935)\n## ------------------------------------------------------------------------\n\n\nÜbung 4"
  },
  {
    "objectID": "02_tabstat.html#übungen",
    "href": "02_tabstat.html#übungen",
    "title": "3  Deskriptionen",
    "section": "3.7 Übungen",
    "text": "3.7 Übungen\n\n3.7.1 Übung\n\nErstellen Sie eine Überblickstabelle für F200 (Wochenarbeitszeit) mit Min, Mean, SD, 1. Quartil (p25), Median, 3. Quartil (p75) und der Anzahl der Beobachtungen.\nLabeln Sie die Spalten mit den Kennzahlen und auch die Variable.\n\n\n\n3.7.2 Übung\n\nErgänzen Sie die Tabelle von Übung 1 F200 um fastgini - so kommen Sie an die abgelegte Info:\n\n\nssc install fastgini // falls nicht schon installiert\nfastgini F518_SUF\nreturn list\n\n\n\n3.7.3 Übung\n\nVerändern Sie die oben gezeigte Schleife so, dass nicht mehr die Anzahl, sondern der Anteil der Missings eingefügt wird.\n\n\nmdesc zpalter F518_SUF\nreturn list \n\n\n\n3.7.4 Übung\n\nErweitern Sie den Gruppenvergleich um die Variablen az (Wochenarbeitszeit) und F1104 (Jahr des Schulabschlusses)\nWo könnten Sie die Nachkommastellen verändern? Verändern Sie die Anzeige für die Mittelwerte auf 3 Nachkommastellen\nLassen Sie sich in auch den Median ausgeben. Legen Sie dafür 0 Nachkommastellen als Format fest. Denken Sie daran, estpost neu zu konfigurieren.\nPassen Sie die Syntax in cells() an, um die Werte neben- oder untereinander angezeigt zu bekommen."
  },
  {
    "objectID": "02_tabstat.html#format",
    "href": "02_tabstat.html#format",
    "title": "3  Deskriptionen",
    "section": "3.8 Mehr zu format",
    "text": "3.8 Mehr zu format\nHier eine kurze (unvollständige) Erklärung zu den fmt()-Optionen, mehr unter help format oder hier\n\n3.8.1 %w.df\n\nMit w geben wir die Gesamtbreite des Outputs an - die Vorzeichen und Dezimaltrenner mitgezählt\nd gibt die Zahl der Dezimalstellen\nGrundsätzlich wird von “rechts” gezählt - The result is right-justified.\n\nAus der Stata-Hilfe:\nThe number 5.139 in %12.2f format displays as\n\n----+----1--\n        5.14\n\nBeispiele\n\nhelp format\n    dis strlen(\"10789.1234\")\n## . help forrequest ignored because of batch mode\n## \n## .         dis strlen(\"10789.1234\")\n## 10\n\n\ndisplay %10.2f  10789.1234 // 0 Nachkommastellen\ndisplay %10.0f  10789.1234 // 2 Nachkommastellen\ndisplay %11.5f  10789.1234 // 0 am Ende hinzugefügt\n\n\n\n3.8.2 %w.dfc\nAnalog zu %w.df, jedoch werden Kommata für bessere Lesbarkeit eingefügt. Auch die Kommata zählen für die Breite w.\nWährend ``\nMit %w**,**dfc können wir das Format für Dezimal- und Tausendertrenner ändern: Dezimalstellen werden mit einem , abgetrennt, 1000er mit .\nBeispiele: mit fc werden Tausendertrenner eingefügt\n\ndisplay %10.2fc     10789.1234\ndisplay %10.2fc     10789.1234\n## . display %10.2fc         10789.1 10,789.12\n## \n## . display %10.2fc         10789.1234\n##  10,789.12\n\n\ndisplay %10,2fc     10789.1234 // , und . tauschen -> \"dt Format\"\n\n\n10.789,12"
  },
  {
    "objectID": "06_mixed_logit.html",
    "href": "06_mixed_logit.html",
    "title": "7  Multilevel- und logit Modelle",
    "section": "",
    "text": ".libPaths(\"D:/R-library4\")\nknitr::opts_chunk$set(collapse = TRUE)\nknitr::opts_chunk$set(dpi=800)\n# knitr::opts_chunk$set(collectcode = T)\nlibrary(Statamarkdown)\nlibrary(tidyverse)\nlibrary(kableExtra)\nstataexe <- \"C:/Program Files/Stata16/StataSE-64.exe\"\nknitr::opts_chunk$set(engine.path=list(stata=stataexe))\n# baua <- readstata13::read.dta13(\"D:/Datenspeicher/BIBB_BAuA/BIBBBAuA_2018_suf1.0.dta\",convert.factors = F)"
  },
  {
    "objectID": "06_mixed_logit.html#logit",
    "href": "06_mixed_logit.html#logit",
    "title": "7  Multilevel- und logit Modelle",
    "section": "7.1 logit",
    "text": "7.1 logit\nUm die Odds Ratios zu erhalten, müssen wir eform verwenden:\n\nlogit nt i.S1 \nest store logm1\nesttab logm1, b se(%9.3f) \n\n\n## . quiet. tab S1\n## \n##  Geschlecht |      Freq.     Percent        Cum.\n## ------------+-----------------------------------\n##    männlich |     10,074       50.34       50.34\n##    weiblich |      9,938       49.66      100.00\n## ------------+-----------------------------------\n##       Total |     20,012      100.00\n\n\n## . quiet. logit nt i.S1 \n## \n## Iteration 0:   log likelihood = -6191.9354  \n## Iteration 1:   log likelihood = -6187.5538  \n## Iteration 2:   log likelihood =   -6187.55  \n## Iteration 3:   log likelihood =   -6187.55  \n## \n## Logistic regression                             Number of obs     =     20,012\n##                                                 LR chi2(1)        =       8.77\n##                                                 Prob > chi2       =     0.0031\n## Log likelihood =   -6187.55                     Pseudo R2         =     0.0007\n## \n## ------------------------------------------------------------------------------\n##           nt |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]\n## -------------+----------------------------------------------------------------\n##           S1 |\n##    weiblich  |   .1442729   .0487565     2.96   0.003      .048712    .2398339\n##        _cons |  -2.351375   .0353592   -66.50   0.000    -2.420678   -2.282073\n## ------------------------------------------------------------------------------\n## \n## . est store logm1\n## \n## . esttab logm1, b se(%9.3f)\n## \n## ----------------------------\n##                       (1)   \n##                        nt   \n## ----------------------------\n## nt                          \n## 1.S1                    0   \n##                       (.)   \n## \n## 2.S1                0.144** \n##                   (0.049)   \n## \n## _cons              -2.351***\n##                   (0.035)   \n## ----------------------------\n## N                   20012   \n## ----------------------------\n## Standard errors in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001\n\n\nesttab logm1, b se(%9.3f) eform // eform für Odds Ratios\n\n\n## . quiet. esttab logm1, b se(%9.3f) eform // eform für Odds Ratios\n## \n## ----------------------------\n##                       (1)   \n##                        nt   \n## ----------------------------\n## nt                          \n## 1.S1                    1   \n##                       (.)   \n## \n## 2.S1                1.155** \n##                   (0.056)   \n## ----------------------------\n## N                   20012   \n## ----------------------------\n## Exponentiated coefficients; Standard errors in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001\n\nAußerdem können wir mit estadd lrtest direkt den LR-Test in die Tabelle aufnehmen:\n\nlogit nt i.S1  if !missing(zpalter)\nest store logm1b\nlogit nt i.S1 zpalter \nest store logm2\nestadd lrtest logm1b\nesttab logm*, b se(%9.3f) scalars(\"lrtest_chi2  LRTest Chi²\" lrtest_df lrtest_p)\n\n\n## . quiet. esttab logm*, b se(%9.3f) scalars(\"lrtest_chi2  LRTest Chi²\" lrtest_df lrtest_p) \n## \n## --------------------------------------------\n##                       (1)             (2)   \n##                        nt              nt   \n## --------------------------------------------\n## nt                                          \n## 1.S1                    0               0   \n##                       (.)             (.)   \n## \n## 2.S1                0.142**         0.158** \n##                   (0.049)         (0.049)   \n## \n## zpalter                           -0.0108***\n##                                   (0.002)   \n## \n## _cons              -2.350***       -1.854***\n##                   (0.035)         (0.103)   \n## --------------------------------------------\n## N                   19836           19836   \n## LRTest Chi²                         25.46   \n## lrtest_df                               1   \n## lrtest_p                      0.000000451   \n## --------------------------------------------\n## Standard errors in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001\n\nMit pr2 aic bic können wir Modellkennzahlen ausgeben lassen.\n\nesttab logm*, b se(%9.3f)  pr2 aic bic\n\n\n## . quiet. esttab logm?, b se(%9.3f) scalars(\"lrtest_chi2  LRTest Chi²\" lrtest_df lrtest_p) \n## \n## ----------------------------\n##                       (1)   \n##                        nt   \n## ----------------------------\n## nt                          \n## 1.S1                    0   \n##                       (.)   \n## \n## 2.S1                0.158** \n##                   (0.049)   \n## \n## zpalter           -0.0108***\n##                   (0.002)   \n## \n## _cons              -1.854***\n##                   (0.103)   \n## ----------------------------\n## N                   19836   \n## LRTest Chi²         25.46   \n## lrtest_df               1   \n## lrtest_p      0.000000451   \n## ----------------------------\n## Standard errors in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001\n\nBei margins müssen wir darauf achten, die Option , post zu verwenden:\n\nlogit nt i.S1 zpalter \nmargins, dydx(*) post\nest store mar_mod2\nesttab mar_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n\n\n## . quiet. esttab mar_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n## \n## -----------------------------------------------------------------------------\n##                                                                              \n##                         b           se        min95        max95            p\n## -----------------------------------------------------------------------------\n## 1.S1                    0            .            0            0            .\n## 2.S1               0.0133      0.00414      0.00523       0.0214      0.00126\n## zpalter         -0.000911     0.000180     -0.00126    -0.000558  0.000000428\n## -----------------------------------------------------------------------------\n## N                   19836                                                    \n## -----------------------------------------------------------------------------\n\nDas funktioniert natürlich auch für die predictions mit ,at():\n\nest restore logm2\nmargins, at(zpalter = (18 20(5)65) ) post\nest store pred_mod2\nesttab pred_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n\n\n## . quiet. esttab pred_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n## \n## -----------------------------------------------------------------------------\n##                                                                              \n##                         b           se        min95        max95            p\n## -----------------------------------------------------------------------------\n## 1._at               0.123      0.00697        0.109        0.136            0\n## 2._at               0.120      0.00644        0.108        0.133            0\n## 3._at               0.115      0.00520        0.105        0.125            0\n## 4._at               0.109      0.00411        0.101        0.117            0\n## 5._at               0.104      0.00318       0.0980        0.110            0\n## 6._at              0.0993      0.00248       0.0944        0.104            0\n## 7._at              0.0945      0.00210       0.0904       0.0987            0\n## 8._at              0.0900      0.00212       0.0859       0.0942            0\n## 9._at              0.0857      0.00243       0.0809       0.0904            0\n## 10._at             0.0815      0.00288       0.0759       0.0872            0\n## 11._at             0.0776      0.00337       0.0710       0.0842            0\n## -----------------------------------------------------------------------------\n## N                   19836                                                    \n## -----------------------------------------------------------------------------"
  },
  {
    "objectID": "06_mixed_logit.html#mehrebenenmodelle",
    "href": "06_mixed_logit.html#mehrebenenmodelle",
    "title": "7  Multilevel- und logit Modelle",
    "section": "7.2 Mehrebenenmodelle",
    "text": "7.2 Mehrebenenmodelle\ntransform(ln*: exp(@) exp(@)) um die Werte im Random Part richtig anzuzeigen:\n\nxtmixed F518_SUF i.S1 ||Bula:\nest store mmodel\nesttab mmodel , transform(ln*: exp(@) exp(@))\n\n\n## . quiet. esttab mmodel , transform(ln*: exp(@) exp(@))\n## \n## ----------------------------\n##                       (1)   \n##                  F518_SUF   \n## ----------------------------\n## F518_SUF                    \n## 1.S1                    0   \n##                       (.)   \n## \n## 2.S1              -1437.4***\n##                  (-26.88)   \n## \n## _cons              4123.8***\n##                   (41.45)   \n## ----------------------------\n## lns1_1_1                    \n## _cons               354.8***\n##                   (28.17)   \n## ----------------------------\n## lnsig_e                     \n## _cons              3445.8***\n##                 (1484.91)   \n## ----------------------------\n## N                   16635   \n## ----------------------------\n## t statistics in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001\n\nSo können wir die ICC hinzufügen:\n\nxtmixed F518_SUF i.S1 ||Bula:\nestat icc\nestadd scalar icc2 = r(icc2) \nesttab, se wide transform(ln*: exp(@) exp(@)) ///\n    varwidth(13) scalars(icc2)   \n\n\n## . quiet. esttab, se wide transform(ln*: exp(@) exp(@)) ///\n## >     varwidth(13) scalars(icc2)\n## \n## ------------------------------------------\n##                        (1)                \n##                   F518_SUF                \n## ------------------------------------------\n## F518_SUF                                  \n## 1.S1                     0             (.)\n## 2.S1               -1437.4***      (53.47)\n## _cons               4123.8***      (99.48)\n## ------------------------------------------\n## lns1_1_1                                  \n## _cons                354.8***      (73.97)\n## ------------------------------------------\n## lnsig_e                                   \n## _cons               3445.8***      (18.90)\n## ------------------------------------------\n## N                    16635                \n## icc2                0.0105                \n## ------------------------------------------\n## Standard errors in parentheses\n## * p<0.05, ** p<0.01, *** p<0.001"
  },
  {
    "objectID": "07_misc.html#estimates-store-auch-bei-estpost",
    "href": "07_misc.html#estimates-store-auch-bei-estpost",
    "title": "8  Weitere Optionen",
    "section": "8.1 estimates store auch bei estpost",
    "text": "8.1 estimates store auch bei estpost\nWir können auch die estimates aus einem estpost speichern, um sie später wieder aufzurufen - auch nach einem Befehl, der eigentlich e() überschreibt.\n\nestpost correlate zpalter F518_SUF F200, matrix\nestimates store m1\nxi: reg az i.S1\nest store m2\n\nesttab m1, not unstack compress noobs nonumber nomtitles ///\n         varlabels(zpalter \"(1) Alter\" F518_SUF \"(2) Bruttoeinkommen\" F200 \"(3) Wochenarbeitszeit\") ///\n         eqlabels(\"(1) Alter\" \"(2) Bruttoeinkommen\" \"(3) Wochenarbeitszeit\") ///\n    collabels(none) ///\n         varwidth(22) ///\n         modelwidth(22)\n\n\n## . quiet. esttab m1, cell(b(fmt(5) star)) not unstack compress noobs nonumber nomtitles ///\n## >                  varlabels(zpalter \"(1) Alter\" F518_SUF \"(2) Bruttoeinkommen\" F200 \"(3) Wochenarbeitszeit\") ///\n## >                  eqlabels(\"(1) Alter\" \"(2) Bruttoeinkommen\" \"(3) Wochenarbeitszeit\") ///\n## >      collabels(none) ///\n## >                  varwidth(22) ///\n## >                  modelwidth(22)\n## \n## ----------------------------------------------------------------------------------------------------\n##                                     (1) Alter       (2) Bruttoeinkommen     (3) Wochenarbeitszeit   \n## ----------------------------------------------------------------------------------------------------\n## (1) Alter                             1.00000                                                       \n## (2) Bruttoeinkommen                   0.07956***                1.00000                             \n## (3) Wochenarbeitszeit                -0.05579***                0.29245***                1.00000   \n## ----------------------------------------------------------------------------------------------------"
  },
  {
    "objectID": "07_misc.html#excel-export",
    "href": "07_misc.html#excel-export",
    "title": "8  Weitere Optionen",
    "section": "8.2 Excel-Export",
    "text": "8.2 Excel-Export\nFür den Excel-Export können wir einfach using ...csv nutzen. Für deutschsprachige Systeme empfiehlt sich dabei aber, statt , ein ; als Spaltentrenner zu verwenden. Das können wir mit der Option scsv erreichen.\n\ncsv als Dateiendung produziert eine csv-Datei, die mit Excel geöffnet werden kann\nnostar empfiehlt sich für den Excel-Export, da Sternchen in Excel häufig zu Problemen führen\nscsv ; anstelle von , als Spaltenseparator\n\n\nesttab mod* using \"${results}\\tabelle1.csv\", cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") scsv"
  },
  {
    "objectID": "01_basics.html",
    "href": "01_basics.html",
    "title": "2  Tabellenexport mit Stata: Grundlagen & Pakete",
    "section": "",
    "text": "Es gibt eine ganze Reihe von ados, welche einen Tabellenexport aus Stata erlauben. Wir werden mit estout/esttab von Ben Jann arbeiten, das einige Vorteile bietet: Zunächst können damit sowohl Deskriptions- als auch Regressionstabellen exportiert werden - man muss also nur eine Syntaxlogik lernen. Dabei sind Exportbefehle für (fast) alle gängigen Deskriptionen und Regressionsmodelle vorhanden, inklusive Outputs von margins. Außerdem können damit Tabellen sowohl in Word-, Latex- und auch Excel-Formate exportiert werden - auch hier ist (fast) die gleiche Syntaxlogik verwendbar. Darüber hinaus bietet esttab die Möglichkeit einiger Formatierungseinstellungen.\nUm estout/esttab zu verwenden, müssen wir es zunächst installieren:\nDies sind die aktuellen Versionen:\nMit estout/esttab können wir Tabellen mit zusammenfassenden Statistiken und Regressionsergebnissen zu erstellen, die leicht in oder importiert werden können oder in Word verwendet werden können. Für die Latex-Verion ergibt sich der Vorteil, dass das ganze System dynamisch ist. Wenn wir etwas in unserem Do-File ändern (z. B. eine bestimmte Gruppe weglassen, eine neue Variabe aufnehmen), dann werden die Ergebnisse automatisch in LaTeX aktualisiert. Das kann eine Menge Zeit sparen, aber die Einrichtung in Latex ist sehr zeitintensiv und deren Details würden den Rahmen unseres Kurses sprengen. Ich stelle daher hier eine (sehr einfache) Latexvorlage zur Verfügung, die versierte Latex-Nutzer*innen gerne an Ihre Bedürfnisse anpassen können."
  },
  {
    "objectID": "01_basics.html#grundlagen-e-und-r",
    "href": "01_basics.html#grundlagen-e-und-r",
    "title": "2  Tabellenexport mit Stata: Grundlagen & Pakete",
    "section": "2.1 Grundlagen: e() und r()",
    "text": "2.1 Grundlagen: e() und r()\nGrundsätzlich baut esttab auf die Postestimates e() auf. Bei jedem Befehl werden im Hintergrund Werte in Matrizen und Skalere (also Zahlen) abgelegt, bspw. bei einem Regressionsmodell. Mit ereturn list können wir uns eine Liste der Postestimates ausgeben lassen:\n\nquietly reg F518_SUF zpalter\nereturn list\n\n\n## . qui use \"D:\\Datenspeicher\\BIBB_BAuA/BIBBBAuA_2018_suf1.0_clean.dta\", cl. qui reg F518_SUF zpalter\n## \n## . ereturn list\n## \n## scalars:\n##                   e(N) =  16543\n##                e(df_m) =  1\n##                e(df_r) =  16541\n##                   e(F) =  105.3561454498825\n##                  e(r2) =  .0063290815436915\n##                e(rmse) =  3525.162828161657\n##                 e(mss) =  1309236899.97876\n##                 e(rss) =  205551251614.9366\n##                e(r2_a) =  .0062690083366028\n##                  e(ll) =  -158590.4618746699\n##                e(ll_0) =  -158642.9792418738\n##                e(rank) =  2\n## \n## macros:\n##             e(cmdline) : \"regress F518_SUF zpalter\"\n##               e(title) : \"Linear regression\"\n##           e(marginsok) : \"XB default\"\n##                 e(vce) : \"ols\"\n##              e(depvar) : \"F518_SUF\"\n##                 e(cmd) : \"regress\"\n##          e(properties) : \"b V\"\n##             e(predict) : \"regres_p\"\n##               e(model) : \"ols\"\n##           e(estat_cmd) : \"regress_estat\"\n## \n## matrices:\n##                   e(b) :  1 x 2\n##                   e(V) :  2 x 2\n## \n## functions:\n##              e(sample)\n\nDas Grundprinzip ist dann immer:\n\nAuswertungsbefehl\nTabelle mit esttab erstellen\nTabelle exportieren (durch Anpassung des esttab-Befehls)\n\nDie Matrizen können wir mit matrix list, die Skalare mit scalar list + Name aufrufen, unter e(b) sind beispielsweise die Koeffizienten abgelegt:\n\nmatrix list e(b)\n\n\n## . qui use \"D:\\Datenspeicher\\BIBB_BAuA/BIBBBAuA_2018_suf1.0_clean.dta\", cl. qui reg F518_SUF zpalter\n## \n## . matrix list e(b)\n## \n## e(b)[1,2]\n##       zpalter      _cons\n## y1  24.622534  2381.2797\n\nBei vielen deskriptiven Befehlen werden die Kennzahlen hingegen als results in r() abgelegt. An die Werte in r() kommen wird mit return list, ereturn list für e() ist dahingegen leer:\n\nquietly su F518_SUF\nereturn list\nreturn list\n\n\n## . qui use \"D:\\Datenspeicher\\BIBB_BAuA/BIBBBAuA_2018_suf1.0_clean.dta\", cl. quietly su F518_SUF\n## \n## . ereturn list\n## \n## . return list\n## \n## scalars:\n##                   r(N) =  16635\n##               r(sum_w) =  16635\n##                r(mean) =  3532.108506161707\n##                 r(Var) =  12467451.86889181\n##                  r(sd) =  3530.927904799503\n##                 r(min) =  1\n##                 r(max) =  72000\n##                 r(sum) =  58756625\n\nDas bringt mit sich, dass wir für Deskriptionen meist mit dem Hilfsbefehl estpost die in r() abgelegten Ergebnisse in e() umwandeln müssen. Grundsätzlich sind aber die Ergebnisse aus e() und r() alle in Tabellen mit esttab exportierbar."
  },
  {
    "objectID": "01_basics.html#kurs-setup",
    "href": "01_basics.html#kurs-setup",
    "title": "2  Tabellenexport mit Stata: Grundlagen & Pakete",
    "section": "2.2 Kurs-Setup",
    "text": "2.2 Kurs-Setup"
  },
  {
    "objectID": "01_basics.html#init",
    "href": "01_basics.html#init",
    "title": "2  Tabellenexport mit Stata: Grundlagen & Pakete",
    "section": "2.3 Übung",
    "text": "2.3 Übung\n\nGenerieren Sie einmal BIBBBAuA_2018_suf1.0_clean.dta mit Hilfe von 00_init.do für die weiteren Aufgaben.\nTesten Sie einmal return list und erturn list nach reg F518_SUF zpalter bzw. su zpalter"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R am BIBB",
    "section": "",
    "text": "Herzlich Willkommen\nHier entsteht das Begleitskript für die Weiterbildung Stata – Erzeugen von Deskriptions- und Regressionstabellen am BIBB von Andreas Filser am 21.10.2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   Freitag 21.10.2022\n   8:30 - 17:30 Uhr\n   Webex"
  }
]