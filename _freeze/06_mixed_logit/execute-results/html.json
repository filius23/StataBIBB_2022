{
  "hash": "e55c8f52ebb71ae4d4a451bb1f3a370b",
  "result": {
    "markdown": "# Multilevel- und logit Modelle  {#ml_log} \n\n\n\n\n\n\n## `logit` \n\nUm die Odds Ratios zu erhalten, müssen wir `eform` verwenden:\n\n::: {.cell}\n\n```{.stata .cell-code}\nlogit nt i.S1 \nest store logm1\nesttab logm1, b se(%9.3f) \n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nIteration 0:   log likelihood = -6191.9354  \nIteration 1:   log likelihood = -6187.5538  \nIteration 2:   log likelihood =   -6187.55  \nIteration 3:   log likelihood =   -6187.55  \n\nLogistic regression                             Number of obs     =     20,012\n                                                LR chi2(1)        =       8.77\n                                                Prob > chi2       =     0.0031\nLog likelihood =   -6187.55                     Pseudo R2         =     0.0007\n\n------------------------------------------------------------------------------\n          nt |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n          S1 |\n   weiblich  |   .1442729   .0487565     2.96   0.003      .048712    .2398339\n       _cons |  -2.351375   .0353592   -66.50   0.000    -2.420678   -2.282073\n------------------------------------------------------------------------------\n\n\n\n----------------------------\n                      (1)   \n                       nt   \n----------------------------\nnt                          \n1.S1                    0   \n                      (.)   \n\n2.S1                0.144** \n                  (0.049)   \n\n_cons              -2.351***\n                  (0.035)   \n----------------------------\nN                   20012   \n----------------------------\nStandard errors in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab logm1, b se(%9.3f) eform // eform für Odds Ratios\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                      (1)   \n                       nt   \n----------------------------\nnt                          \n1.S1                    1   \n                      (.)   \n\n2.S1                1.155** \n                  (0.056)   \n----------------------------\nN                   20012   \n----------------------------\nExponentiated coefficients; Standard errors in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n\n\n\n\nAußerdem können wir mit `estadd lrtest` direkt den LR-Test in die Tabelle aufnehmen:\n\n::: {.cell}\n\n```{.stata .cell-code}\nlogit nt i.S1  if !missing(zpalter)\nest store logm1b\nlogit nt i.S1 zpalter \nest store logm2\nestadd lrtest logm1b\nesttab logm*, b se(%9.3f) scalars(\"lrtest_chi2  LRTest Chi²\" lrtest_df lrtest_p)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                      (1)             (2)   \n                       nt              nt   \n--------------------------------------------\nnt                                          \n1.S1                    0               0   \n                      (.)             (.)   \n\n2.S1                0.142**         0.158** \n                  (0.049)         (0.049)   \n\nzpalter                           -0.0108***\n                                  (0.002)   \n\n_cons              -2.350***       -1.854***\n                  (0.035)         (0.103)   \n--------------------------------------------\nN                   19836           19836   \nLRTest Chi²                         25.46   \nlrtest_df                               1   \nlrtest_p                      0.000000451   \n--------------------------------------------\nStandard errors in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n\n\nMit `pr2` `aic` `bic` können wir Modellkennzahlen ausgeben lassen.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab logm*, b se(%9.3f)  pr2 aic bic\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                      (1)   \n                       nt   \n----------------------------\nnt                          \n1.S1                    0   \n                      (.)   \n\n2.S1                0.158** \n                  (0.049)   \n\nzpalter           -0.0108***\n                  (0.002)   \n\n_cons              -1.854***\n                  (0.103)   \n----------------------------\nN                   19836   \nLRTest Chi²         25.46   \nlrtest_df               1   \nlrtest_p      0.000000451   \n----------------------------\nStandard errors in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n\n\nBei `margins` müssen wir darauf achten, die Option `, post` zu verwenden:\n\n::: {.cell}\n\n```{.stata .cell-code}\nlogit nt i.S1 zpalter \nmargins, dydx(*) post\nest store mar_mod2\nesttab mar_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                        b           se        min95        max95            p\n-----------------------------------------------------------------------------\n1.S1                    0            .            0            0            .\n2.S1               0.0133      0.00414      0.00523       0.0214      0.00126\nzpalter         -0.000911     0.000180     -0.00126    -0.000558  0.000000428\n-----------------------------------------------------------------------------\nN                   19836                                                    \n-----------------------------------------------------------------------------\n```\n:::\n:::\n\n\nDas funktioniert natürlich auch für die predictions mit `,at()`:\n\n::: {.cell}\n\n```{.stata .cell-code}\nest restore logm2\nmargins, at(zpalter = (18 20(5)65) ) post\nest store pred_mod2\nesttab pred_mod2, cells(\"b(fmt(a3)) se(fmt(a3)) ci_l(fmt(a3)) ci_u(fmt(a3)) p(fmt(a3))\") nonumbers\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                        b           se        min95        max95            p\n-----------------------------------------------------------------------------\n1._at               0.123      0.00697        0.109        0.136            0\n2._at               0.120      0.00644        0.108        0.133            0\n3._at               0.115      0.00520        0.105        0.125            0\n4._at               0.109      0.00411        0.101        0.117            0\n5._at               0.104      0.00318       0.0980        0.110            0\n6._at              0.0993      0.00248       0.0944        0.104            0\n7._at              0.0945      0.00210       0.0904       0.0987            0\n8._at              0.0900      0.00212       0.0859       0.0942            0\n9._at              0.0857      0.00243       0.0809       0.0904            0\n10._at             0.0815      0.00288       0.0759       0.0872            0\n11._at             0.0776      0.00337       0.0710       0.0842            0\n-----------------------------------------------------------------------------\nN                   19836                                                    \n-----------------------------------------------------------------------------\n```\n:::\n:::\n\n\n\n## Mehrebenenmodelle\n\n`transform(ln*: exp(@) exp(@))` um die Werte im Random Part richtig anzuzeigen:\n\n::: {.cell}\n\n```{.stata .cell-code}\nxtmixed F518_SUF i.S1 ||Bula:\nest store mmodel\nesttab mmodel ,\ttransform(ln*: exp(@) exp(@))\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                      (1)   \n                 F518_SUF   \n----------------------------\nF518_SUF                    \n1.S1                    0   \n                      (.)   \n\n2.S1              -1437.4***\n                 (-26.88)   \n\n_cons              4123.8***\n                  (41.45)   \n----------------------------\nlns1_1_1                    \n_cons               354.8***\n                  (28.17)   \n----------------------------\nlnsig_e                     \n_cons              3445.8***\n                (1484.91)   \n----------------------------\nN                   16635   \n----------------------------\nt statistics in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n\n\n\nSo können wir die `ICC` hinzufügen:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nxtmixed F518_SUF i.S1 ||Bula:\nestat icc\nestadd scalar icc2 = r(icc2) \nesttab, se wide transform(ln*: exp(@) exp(@)) ///\n    varwidth(13) scalars(icc2)\t \n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                       (1)                \n                  F518_SUF                \n------------------------------------------\nF518_SUF                                  \n1.S1                     0             (.)\n2.S1               -1437.4***      (53.47)\n_cons               4123.8***      (99.48)\n------------------------------------------\nlns1_1_1                                  \n_cons                354.8***      (73.97)\n------------------------------------------\nlnsig_e                                   \n_cons               3445.8***      (18.90)\n------------------------------------------\nN                    16635                \nicc2                0.0105                \n------------------------------------------\nStandard errors in parentheses\n* p<0.05, ** p<0.01, *** p<0.001\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}